{"mappings":"AAAA,IAAIA,EAEJ,MAAMC,EAAS,CAACC,EAAcC,EAAyBH,KACnD,IAAII,EAAgCC,SAASC,cAAcJ,EAAaK,KAGpEP,GAAQA,EAAKQ,YACbR,EAAKQ,WAAWC,SAIhBP,EAAaQ,OACbC,OAAOC,KAAKV,EAAaQ,OAAOG,SAASC,IACrCV,EAAiBU,GAAQZ,EAAaQ,MAAMI,MAKhDZ,EAAaa,UACbb,EAAaa,SAASF,SAASG,IAC3B,GAAqB,iBAAVA,GAAuC,iBAAVA,EAAoB,CACxD,MAAMC,EAAWZ,SAASa,eAAeF,EAAMG,YAC/Cf,EAAiBgB,YAAYH,QAE7BhB,EAAOe,EAAOZ,MAM1BD,EAAUiB,YAAYhB,ICfpBiB,EAAS,GACf,IAAIC,EAAc,EAElB,MAAMC,EAAYC,IACd,MAAMC,EAAgBH,EACtBD,EAAOI,GAAiBJ,EAAOI,IAAkBD,EASjD,OAFAF,GAAe,EAER,CAACD,EAAOI,GAPGC,IACdL,EAAOI,GAAiBC,EACxBJ,EAAc,EACdK,OAQFA,EAAW,KACb1B,EAAO2B,UAKXC,EApCc,CACVvB,cAAe,CAACC,EAAKG,KAAUK,KAC3B,GAAmB,mBAARR,EAGJ,CAEH,MADgB,KAAEA,QAAKG,WAAOK,GAH9BR,EAAIG,SCwBhBkB,EA5BY,KACV,MAAOE,EAAMC,GAAWR,EAAS,KAC1BS,EAAOC,GAAYV,EAAS,GAEnC,OACEM,EAAAvB,cAAAuB,EAAAK,SAAA,KAEEL,EAAAvB,cAAC,MAAG,KACFuB,EAAAvB,cAAC,MAAG,KAAC,8BACLuB,EAAAvB,cAAC,QAAK,CACJ6B,KAAK,OACLC,YAAY,aACZC,MAAOP,EACPQ,SAAWC,GAAMR,EAAQQ,EAAEC,OAAOH,SAEpCR,EAAAvB,cAAC,KAAE,KAAC,SAAOwB,IAIbD,EAAAvB,cAAC,MAAG,KACFuB,EAAAvB,cAAC,SAAM,CAACmC,QAAUF,GAAMN,EAASD,EAAQ,IAAI,MAC7CH,EAAAvB,cAAC,SAAM,CAACmC,QAAUF,GAAMN,EAASD,EAAQ,IAAI,MAC7CH,EAAAvB,cAAC,KAAE,KAAE0B,MFSM,IAACU,GAAAA,EG9BIrC,SAASsC,cAAc,SH+B3C3C,EAAO0C,EACA,QAAEzC,IG/BR2C,OAAOhB","sources":["Desktop/New%20folder%20(3)/react/src/react/react-dom.ts","Desktop/New%20folder%20(3)/react/src/react/react.ts","Desktop/New%20folder%20(3)/react/src/components/app.tsx","Desktop/New%20folder%20(3)/react/src/index.tsx"],"sourcesContent":["let root: HTMLElement;\r\n\r\nconst render = (reactElement, container: HTMLElement = root) => {\r\n    let actualDomElement: HTMLElement = document.createElement(reactElement.tag);\r\n\r\n    // Clear existing node Before Rerender\r\n    if (root && root.firstChild) {\r\n        root.firstChild.remove();\r\n    }\r\n\r\n    // Assign props to element\r\n    if (reactElement.props) {\r\n        Object.keys(reactElement.props).forEach((prop) => {\r\n            actualDomElement[prop] = reactElement.props[prop];\r\n        });\r\n    }\r\n\r\n    // Recursively render child Element\r\n    if (reactElement.children) {\r\n        reactElement.children.forEach((child) => {\r\n            if (typeof child === \"string\" || typeof child === \"number\") {\r\n                const textNode = document.createTextNode(child.toString());\r\n                actualDomElement.appendChild(textNode);\r\n            } else {\r\n                render(child, actualDomElement);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Finally append to DOM\r\n    container.appendChild(actualDomElement);\r\n};\r\n\r\nconst createRoot = (_root: HTMLElement) => {\r\n    root = _root;\r\n    return { render }\r\n}\r\n\r\n\r\nexport { createRoot, render }","import App from \"../components/app\";\r\nimport { render } from \"./react-dom\";\r\n\r\nconst React = {\r\n    createElement: (tag, props, ...children) => {\r\n        if (typeof tag === \"function\") {\r\n            tag(props);\r\n            return;\r\n        } else {\r\n            const element = { tag, props, children };\r\n            return element;\r\n        }\r\n    },\r\n};\r\n\r\nconst states = [];\r\nlet stateCursor = 0;\r\n\r\nconst useState = (initialState) => {\r\n    const currentCursor = stateCursor;\r\n    states[currentCursor] = states[currentCursor] || initialState;\r\n\r\n    const setState = (newState) => {\r\n        states[currentCursor] = newState;\r\n        stateCursor = 0;\r\n        reRender();\r\n    };\r\n    stateCursor += 1;\r\n\r\n    return [states[currentCursor], setState];\r\n};\r\n\r\n\r\nconst reRender = () => {\r\n    render(App());\r\n};\r\n\r\n\r\nexport { useState }\r\nexport default React;","import React, { useState } from \"../react/react\";\r\n\r\nconst App = () => {\r\n  const [name, setName] = useState('');\r\n  const [count, setCount] = useState(0);\r\n\r\n  return (\r\n    <>\r\n      {/* Name */}\r\n      <div>\r\n        <div>Enter Name and press Enter</div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"First name\"\r\n          value={name}\r\n          onchange={(e) => setName(e.target.value)}\r\n        />\r\n        <h1>Hello {name}</h1>\r\n      </div>\r\n\r\n      {/* Counter */}\r\n      <div>\r\n        <button onclick={(e) => setCount(count + 1)}>+1</button>\r\n        <button onclick={(e) => setCount(count - 1)}>-1</button>\r\n        <h2>{count}</h2>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import App from \"./components/app\";\r\nimport { createRoot } from \"./react/react-dom\";\r\n\r\nconst root = createRoot(document.querySelector(\"#root\"));\r\nroot.render(App());\r\n"],"names":["$650a88c0ecdbb292$var$root","$650a88c0ecdbb292$export$b3890eb0ae9dca99","reactElement","container","actualDomElement","document","createElement","tag","firstChild","remove","props","Object","keys","forEach","prop","children","child","textNode","createTextNode","toString","appendChild","$8cb570f13d5fa7cc$var$states","$8cb570f13d5fa7cc$var$stateCursor","$8cb570f13d5fa7cc$export$60241385465d0a34","initialState","currentCursor","newState","$8cb570f13d5fa7cc$var$reRender","$757f63520c9a1277$export$2e2bcd8739ae039","$8cb570f13d5fa7cc$export$2e2bcd8739ae039","name","setName","count","setCount","Fragment","type","placeholder","value","onchange","e","target","onclick","_root","querySelector","render"],"version":3,"file":"index.8cdd7d39.js.map"}